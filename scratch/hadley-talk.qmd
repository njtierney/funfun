# Hadley's talk Notes

You don't need to write the for loop - the function does the for loop for you. In some sense, this is about being Lazy â€“ Hadley Wickham

give a nice analogy - cupcakes to functions

emphasise four steps: convert units, rely on domain knowledge, use variables, extract out common code

discuss for loops

for loops emphasise the objects

rather than emphasising the action

We want to emphasise the action

functional programming emphasises the action

this idea of wrapping up a common pattern of for loop, is a really powerful idea

![](images/clipboard-2840757389.png)

# metrics on a good function

-   function should be correct: mean should do the mean

-   can you understand what the function is doing

    -   does it elegantly express the intent of the function

    -   so that when you read it you can understand it

    -   This is really important because you can't understand what the function is doing when you later on go to change it - because demands have changed, what you need that function to do has changed - if you cannot understand it, the chances of you correctly making the change are very very small

-   You want a good function to be performant - fast enough.

The first time you write a report, to communicate with other people, the first time it isn't going to be the best. You need to write, and rewrite, again, until you get to something that clearly communicates its intent.

You don't always have the time to do that. But it is really important.

"expressing yourself in R"

<https://www.youtube.com/watch?v=wki0BqlztCo>
