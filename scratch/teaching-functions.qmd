# How to teach functions

-   A function presented abstractly without root in the work that you do
    and care about is hard to understand. So introduce them with real
    examples. And when you want to start using them yourself, start
    small - a spoonful of function writing a day. [Kaylea has a great
    talk on functions that discusses this idea, you should read
    it](https://zealous-wiles-e22e83.netlify.app/talk/funwithfunctions/).
-   When teaching functions, use real examples. Don't use `x` to
    describe the arguments. If you're teaching ecologists, use relevant
    examples - give them fish, give them counting data. Don't give them
    a tool to convert between farenheit and celcius.

When I was introduced to functions, the examples I was given were things
like "Convert celcius into farenheit" and "identify odd numbers". I just
couldn't really see these being useful in what I was doing. I'm just
trying to run an analysis, and get some results and do some plots. These
functions seemed like useful kitchen trinkets, like an apple corer and
slicer, rather than a fundamental skill, like how to use a knife. But I
think understanding functions is understanding how to use a cooking
knife. There's only so far an apple corer and a box grater can get you.
If you can use a knife, you've learnt a fundamental skill.

Overall, the idea of taking my code, and separating it all out into
functions felt like so much work, like spinning a bunch of plates. The
reason it felt so hard, is because I've got my wall of code, this wall
of text, and the idea of writing the function seemed like I needed to
**determine all the bits that might change**, which mean working out
**which bits were relevant/interesting to some other use case**. So the
cognitive load of looking at a bunch of code and trying to identify the
bits that change *felt* like it would be too hard, and I could *do it
later*.

I think the thing I would have told myself is that it isn't about
identifying all of the bits that *might change*. Lots of things can
change. I can swap out the water in my kettle for milk, if I wanted. I
don't want to have to think about all the possible ways things can
change.

The most helpful thing then I think is to look at your code and chunk it
up into key parts. What do I want to do? What are the smaller steps
along the way?
